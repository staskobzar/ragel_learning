
# line 1 "uri_parser.rl"
#
# @LANG: ruby
# Parsing URI
# 

=begin

# line 12 "uri_parser.rl"

=end

class MachineURI
  def initialize(data)
    @is_valid = false
    
# line 19 "uri_parser.rb"
class << self
	attr_accessor :_m_uri_key_offsets
	private :_m_uri_key_offsets, :_m_uri_key_offsets=
end
self._m_uri_key_offsets = [
	0, 0, 6, 12, 18, 24, 30, 36, 
	42, 48, 56, 63, 70, 77, 78, 85, 
	92, 99, 106, 107, 114, 121, 128, 135, 
	136, 143, 150, 157, 164, 165, 172, 179, 
	186, 193, 194, 201, 208, 215, 222, 223, 
	233, 241, 246, 249, 254, 257, 262, 265, 
	268, 269, 275, 278, 281, 282, 288, 291, 
	294, 295, 301, 304, 312, 320, 321, 328, 
	335, 342, 349, 356, 363, 374, 384, 392, 
	400, 407, 414, 424, 433, 442, 451, 453, 
	459, 467, 475, 487, 498, 507, 516, 524, 
	534, 543, 552, 561, 563, 572, 580, 588, 
	600, 611, 620, 629, 637, 647, 656, 665, 
	674, 676, 685, 693, 701, 713, 724, 733, 
	742, 750, 760, 769, 778, 787, 789, 798, 
	806, 814, 826, 837, 846, 855, 863, 873, 
	882, 891, 900, 902, 911, 919, 927, 939, 
	950, 959, 968, 976, 977, 983, 991, 999, 
	1007, 1009, 1015, 1022, 1029, 1036, 1037, 1043, 
	1050, 1057, 1064, 1065, 1071, 1078, 1085, 1092, 
	1093, 1099, 1106, 1113, 1120, 1121, 1130, 1138, 
	1146, 1154, 1155, 1162, 1169, 1180, 1190, 1198, 
	1206, 1213, 1220, 1234, 1235, 1245, 1262, 1264, 
	1275, 1287, 1290, 1303, 1319, 1334, 1347, 1351, 
	1356, 1367
]

class << self
	attr_accessor :_m_uri_trans_keys
	private :_m_uri_trans_keys, :_m_uri_trans_keys=
end
self._m_uri_trans_keys = [
	48, 57, 65, 70, 97, 102, 48, 57, 
	65, 70, 97, 102, 48, 57, 65, 70, 
	97, 102, 48, 57, 65, 70, 97, 102, 
	48, 57, 65, 70, 97, 102, 48, 57, 
	65, 70, 97, 102, 48, 57, 65, 70, 
	97, 102, 48, 57, 65, 70, 97, 102, 
	58, 118, 48, 57, 65, 70, 97, 102, 
	58, 48, 57, 65, 70, 97, 102, 58, 
	48, 57, 65, 70, 97, 102, 58, 48, 
	57, 65, 70, 97, 102, 58, 58, 48, 
	57, 65, 70, 97, 102, 58, 48, 57, 
	65, 70, 97, 102, 58, 48, 57, 65, 
	70, 97, 102, 58, 48, 57, 65, 70, 
	97, 102, 58, 58, 48, 57, 65, 70, 
	97, 102, 58, 48, 57, 65, 70, 97, 
	102, 58, 48, 57, 65, 70, 97, 102, 
	58, 48, 57, 65, 70, 97, 102, 58, 
	58, 48, 57, 65, 70, 97, 102, 58, 
	48, 57, 65, 70, 97, 102, 58, 48, 
	57, 65, 70, 97, 102, 58, 48, 57, 
	65, 70, 97, 102, 58, 58, 48, 57, 
	65, 70, 97, 102, 58, 48, 57, 65, 
	70, 97, 102, 58, 48, 57, 65, 70, 
	97, 102, 58, 48, 57, 65, 70, 97, 
	102, 58, 58, 48, 57, 65, 70, 97, 
	102, 58, 48, 57, 65, 70, 97, 102, 
	58, 48, 57, 65, 70, 97, 102, 58, 
	48, 57, 65, 70, 97, 102, 58, 50, 
	58, 48, 49, 51, 57, 65, 70, 97, 
	102, 46, 58, 48, 57, 65, 70, 97, 
	102, 50, 48, 49, 51, 57, 46, 48, 
	57, 50, 48, 49, 51, 57, 46, 48, 
	57, 50, 48, 49, 51, 57, 93, 48, 
	57, 93, 48, 57, 93, 53, 93, 48, 
	52, 54, 57, 93, 48, 53, 46, 48, 
	57, 46, 46, 53, 48, 52, 54, 57, 
	46, 48, 53, 46, 48, 57, 46, 46, 
	53, 48, 52, 54, 57, 46, 48, 53, 
	46, 58, 48, 57, 65, 70, 97, 102, 
	46, 58, 48, 57, 65, 70, 97, 102, 
	58, 58, 48, 57, 65, 70, 97, 102, 
	93, 48, 57, 65, 70, 97, 102, 93, 
	48, 57, 65, 70, 97, 102, 93, 48, 
	57, 65, 70, 97, 102, 58, 48, 57, 
	65, 70, 97, 102, 58, 48, 57, 65, 
	70, 97, 102, 46, 53, 58, 48, 52, 
	54, 57, 65, 70, 97, 102, 46, 58, 
	48, 53, 54, 57, 65, 70, 97, 102, 
	46, 58, 48, 57, 65, 70, 97, 102, 
	46, 58, 48, 57, 65, 70, 97, 102, 
	93, 48, 57, 65, 70, 97, 102, 58, 
	48, 57, 65, 70, 97, 102, 50, 93, 
	48, 49, 51, 57, 65, 70, 97, 102, 
	46, 58, 93, 48, 57, 65, 70, 97, 
	102, 46, 58, 93, 48, 57, 65, 70, 
	97, 102, 46, 58, 93, 48, 57, 65, 
	70, 97, 102, 58, 93, 48, 57, 65, 
	70, 97, 102, 58, 93, 48, 57, 65, 
	70, 97, 102, 58, 93, 48, 57, 65, 
	70, 97, 102, 46, 53, 58, 93, 48, 
	52, 54, 57, 65, 70, 97, 102, 46, 
	58, 93, 48, 53, 54, 57, 65, 70, 
	97, 102, 46, 58, 93, 48, 57, 65, 
	70, 97, 102, 46, 58, 93, 48, 57, 
	65, 70, 97, 102, 58, 93, 48, 57, 
	65, 70, 97, 102, 50, 93, 48, 49, 
	51, 57, 65, 70, 97, 102, 46, 58, 
	93, 48, 57, 65, 70, 97, 102, 46, 
	58, 93, 48, 57, 65, 70, 97, 102, 
	46, 58, 93, 48, 57, 65, 70, 97, 
	102, 58, 93, 50, 48, 49, 51, 57, 
	65, 70, 97, 102, 58, 93, 48, 57, 
	65, 70, 97, 102, 58, 93, 48, 57, 
	65, 70, 97, 102, 46, 53, 58, 93, 
	48, 52, 54, 57, 65, 70, 97, 102, 
	46, 58, 93, 48, 53, 54, 57, 65, 
	70, 97, 102, 46, 58, 93, 48, 57, 
	65, 70, 97, 102, 46, 58, 93, 48, 
	57, 65, 70, 97, 102, 58, 93, 48, 
	57, 65, 70, 97, 102, 50, 93, 48, 
	49, 51, 57, 65, 70, 97, 102, 46, 
	58, 93, 48, 57, 65, 70, 97, 102, 
	46, 58, 93, 48, 57, 65, 70, 97, 
	102, 46, 58, 93, 48, 57, 65, 70, 
	97, 102, 58, 93, 50, 48, 49, 51, 
	57, 65, 70, 97, 102, 58, 93, 48, 
	57, 65, 70, 97, 102, 58, 93, 48, 
	57, 65, 70, 97, 102, 46, 53, 58, 
	93, 48, 52, 54, 57, 65, 70, 97, 
	102, 46, 58, 93, 48, 53, 54, 57, 
	65, 70, 97, 102, 46, 58, 93, 48, 
	57, 65, 70, 97, 102, 46, 58, 93, 
	48, 57, 65, 70, 97, 102, 58, 93, 
	48, 57, 65, 70, 97, 102, 50, 93, 
	48, 49, 51, 57, 65, 70, 97, 102, 
	46, 58, 93, 48, 57, 65, 70, 97, 
	102, 46, 58, 93, 48, 57, 65, 70, 
	97, 102, 46, 58, 93, 48, 57, 65, 
	70, 97, 102, 58, 93, 50, 48, 49, 
	51, 57, 65, 70, 97, 102, 58, 93, 
	48, 57, 65, 70, 97, 102, 58, 93, 
	48, 57, 65, 70, 97, 102, 46, 53, 
	58, 93, 48, 52, 54, 57, 65, 70, 
	97, 102, 46, 58, 93, 48, 53, 54, 
	57, 65, 70, 97, 102, 46, 58, 93, 
	48, 57, 65, 70, 97, 102, 46, 58, 
	93, 48, 57, 65, 70, 97, 102, 58, 
	93, 48, 57, 65, 70, 97, 102, 50, 
	93, 48, 49, 51, 57, 65, 70, 97, 
	102, 46, 58, 93, 48, 57, 65, 70, 
	97, 102, 46, 58, 93, 48, 57, 65, 
	70, 97, 102, 46, 58, 93, 48, 57, 
	65, 70, 97, 102, 58, 93, 50, 48, 
	49, 51, 57, 65, 70, 97, 102, 58, 
	93, 48, 57, 65, 70, 97, 102, 58, 
	93, 48, 57, 65, 70, 97, 102, 46, 
	53, 58, 93, 48, 52, 54, 57, 65, 
	70, 97, 102, 46, 58, 93, 48, 53, 
	54, 57, 65, 70, 97, 102, 46, 58, 
	93, 48, 57, 65, 70, 97, 102, 46, 
	58, 93, 48, 57, 65, 70, 97, 102, 
	58, 93, 48, 57, 65, 70, 97, 102, 
	58, 48, 57, 65, 70, 97, 102, 58, 
	93, 48, 57, 65, 70, 97, 102, 58, 
	93, 48, 57, 65, 70, 97, 102, 58, 
	93, 48, 57, 65, 70, 97, 102, 58, 
	93, 48, 57, 65, 70, 97, 102, 58, 
	48, 57, 65, 70, 97, 102, 58, 48, 
	57, 65, 70, 97, 102, 58, 48, 57, 
	65, 70, 97, 102, 58, 48, 57, 65, 
	70, 97, 102, 58, 48, 57, 65, 70, 
	97, 102, 58, 48, 57, 65, 70, 97, 
	102, 58, 48, 57, 65, 70, 97, 102, 
	58, 48, 57, 65, 70, 97, 102, 58, 
	48, 57, 65, 70, 97, 102, 58, 48, 
	57, 65, 70, 97, 102, 58, 48, 57, 
	65, 70, 97, 102, 58, 48, 57, 65, 
	70, 97, 102, 58, 48, 57, 65, 70, 
	97, 102, 58, 48, 57, 65, 70, 97, 
	102, 58, 48, 57, 65, 70, 97, 102, 
	58, 50, 48, 49, 51, 57, 65, 70, 
	97, 102, 46, 58, 48, 57, 65, 70, 
	97, 102, 46, 58, 48, 57, 65, 70, 
	97, 102, 46, 58, 48, 57, 65, 70, 
	97, 102, 58, 58, 48, 57, 65, 70, 
	97, 102, 58, 48, 57, 65, 70, 97, 
	102, 46, 53, 58, 48, 52, 54, 57, 
	65, 70, 97, 102, 46, 58, 48, 53, 
	54, 57, 65, 70, 97, 102, 46, 58, 
	48, 57, 65, 70, 97, 102, 46, 58, 
	48, 57, 65, 70, 97, 102, 58, 48, 
	57, 65, 70, 97, 102, 46, 48, 57, 
	65, 70, 97, 102, 33, 36, 61, 93, 
	95, 126, 38, 46, 48, 59, 65, 90, 
	97, 122, 46, 43, 58, 45, 46, 48, 
	57, 65, 90, 97, 122, 0, 33, 35, 
	37, 47, 59, 61, 63, 64, 95, 126, 
	36, 57, 65, 90, 97, 122, 35, 63, 
	33, 37, 61, 95, 126, 36, 59, 63, 
	90, 97, 122, 33, 35, 37, 61, 95, 
	126, 36, 59, 63, 90, 97, 122, 35, 
	47, 63, 33, 35, 37, 47, 61, 95, 
	126, 36, 59, 63, 90, 97, 122, 33, 
	35, 37, 47, 61, 63, 64, 91, 95, 
	126, 36, 59, 65, 90, 97, 122, 33, 
	35, 37, 47, 61, 63, 64, 95, 126, 
	36, 59, 65, 90, 97, 122, 33, 35, 
	37, 61, 91, 95, 126, 36, 59, 63, 
	90, 97, 122, 35, 47, 58, 63, 35, 
	47, 63, 48, 57, 35, 43, 47, 58, 
	63, 45, 57, 65, 90, 97, 122, 0, 
	33, 35, 37, 47, 61, 63, 95, 126, 
	36, 59, 64, 90, 97, 122, 0
]

class << self
	attr_accessor :_m_uri_single_lengths
	private :_m_uri_single_lengths, :_m_uri_single_lengths=
end
self._m_uri_single_lengths = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 2, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 2, 
	2, 1, 1, 1, 1, 1, 1, 1, 
	1, 2, 1, 1, 1, 2, 1, 1, 
	1, 2, 1, 2, 2, 1, 1, 1, 
	1, 1, 1, 1, 3, 2, 2, 2, 
	1, 1, 2, 3, 3, 3, 2, 0, 
	2, 2, 4, 3, 3, 3, 2, 2, 
	3, 3, 3, 2, 1, 2, 2, 4, 
	3, 3, 3, 2, 2, 3, 3, 3, 
	2, 1, 2, 2, 4, 3, 3, 3, 
	2, 2, 3, 3, 3, 2, 1, 2, 
	2, 4, 3, 3, 3, 2, 2, 3, 
	3, 3, 2, 1, 2, 2, 4, 3, 
	3, 3, 2, 1, 0, 2, 2, 2, 
	2, 0, 1, 1, 1, 1, 0, 1, 
	1, 1, 1, 0, 1, 1, 1, 1, 
	0, 1, 1, 1, 1, 1, 2, 2, 
	2, 1, 1, 1, 3, 2, 2, 2, 
	1, 1, 6, 1, 2, 11, 2, 5, 
	6, 3, 7, 10, 9, 7, 4, 3, 
	5, 9
]

class << self
	attr_accessor :_m_uri_range_lengths
	private :_m_uri_range_lengths, :_m_uri_range_lengths=
end
self._m_uri_range_lengths = [
	0, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 0, 3, 3, 
	3, 3, 0, 3, 3, 3, 3, 0, 
	3, 3, 3, 3, 0, 3, 3, 3, 
	3, 0, 3, 3, 3, 3, 0, 4, 
	3, 2, 1, 2, 1, 2, 1, 1, 
	0, 2, 1, 1, 0, 2, 1, 1, 
	0, 2, 1, 3, 3, 0, 3, 3, 
	3, 3, 3, 3, 4, 4, 3, 3, 
	3, 3, 4, 3, 3, 3, 0, 3, 
	3, 3, 4, 4, 3, 3, 3, 4, 
	3, 3, 3, 0, 4, 3, 3, 4, 
	4, 3, 3, 3, 4, 3, 3, 3, 
	0, 4, 3, 3, 4, 4, 3, 3, 
	3, 4, 3, 3, 3, 0, 4, 3, 
	3, 4, 4, 3, 3, 3, 4, 3, 
	3, 3, 0, 4, 3, 3, 4, 4, 
	3, 3, 3, 0, 3, 3, 3, 3, 
	0, 3, 3, 3, 3, 0, 3, 3, 
	3, 3, 0, 3, 3, 3, 3, 0, 
	3, 3, 3, 3, 0, 4, 3, 3, 
	3, 0, 3, 3, 4, 4, 3, 3, 
	3, 3, 4, 0, 4, 3, 0, 3, 
	3, 0, 3, 3, 3, 3, 0, 1, 
	3, 3
]

class << self
	attr_accessor :_m_uri_index_offsets
	private :_m_uri_index_offsets, :_m_uri_index_offsets=
end
self._m_uri_index_offsets = [
	0, 0, 4, 8, 12, 16, 20, 24, 
	28, 32, 38, 43, 48, 53, 55, 60, 
	65, 70, 75, 77, 82, 87, 92, 97, 
	99, 104, 109, 114, 119, 121, 126, 131, 
	136, 141, 143, 148, 153, 158, 163, 165, 
	172, 178, 182, 185, 189, 192, 196, 199, 
	202, 204, 209, 212, 215, 217, 222, 225, 
	228, 230, 235, 238, 244, 250, 252, 257, 
	262, 267, 272, 277, 282, 290, 297, 303, 
	309, 314, 319, 326, 333, 340, 347, 350, 
	354, 360, 366, 375, 383, 390, 397, 403, 
	410, 417, 424, 431, 434, 440, 446, 452, 
	461, 469, 476, 483, 489, 496, 503, 510, 
	517, 520, 526, 532, 538, 547, 555, 562, 
	569, 575, 582, 589, 596, 603, 606, 612, 
	618, 624, 633, 641, 648, 655, 661, 668, 
	675, 682, 689, 692, 698, 704, 710, 719, 
	727, 734, 741, 747, 749, 753, 759, 765, 
	771, 774, 778, 783, 788, 793, 795, 799, 
	804, 809, 814, 816, 820, 825, 830, 835, 
	837, 841, 846, 851, 856, 858, 864, 870, 
	876, 882, 884, 889, 894, 902, 909, 915, 
	921, 926, 931, 942, 944, 951, 966, 969, 
	978, 988, 992, 1003, 1017, 1030, 1041, 1046, 
	1051, 1060
]

class << self
	attr_accessor :_m_uri_trans_targs
	private :_m_uri_trans_targs, :_m_uri_trans_targs=
end
self._m_uri_trans_targs = [
	2, 2, 2, 0, 183, 183, 183, 0, 
	4, 4, 4, 0, 184, 184, 184, 0, 
	6, 6, 6, 0, 185, 185, 185, 0, 
	8, 8, 8, 0, 188, 188, 188, 0, 
	139, 177, 10, 10, 10, 0, 14, 11, 
	11, 11, 0, 14, 12, 12, 12, 0, 
	14, 13, 13, 13, 0, 14, 0, 126, 
	15, 15, 15, 0, 19, 16, 16, 16, 
	0, 19, 17, 17, 17, 0, 19, 18, 
	18, 18, 0, 19, 0, 113, 20, 20, 
	20, 0, 24, 21, 21, 21, 0, 24, 
	22, 22, 22, 0, 24, 23, 23, 23, 
	0, 24, 0, 100, 25, 25, 25, 0, 
	29, 26, 26, 26, 0, 29, 27, 27, 
	27, 0, 29, 28, 28, 28, 0, 29, 
	0, 87, 30, 30, 30, 0, 34, 31, 
	31, 31, 0, 34, 32, 32, 32, 0, 
	34, 33, 33, 33, 0, 34, 0, 74, 
	35, 35, 35, 0, 39, 36, 36, 36, 
	0, 39, 37, 37, 37, 0, 39, 38, 
	38, 38, 0, 39, 0, 68, 72, 40, 
	71, 73, 73, 0, 41, 62, 59, 67, 
	67, 0, 57, 42, 55, 0, 43, 55, 
	0, 53, 44, 51, 0, 45, 51, 0, 
	49, 46, 47, 0, 190, 47, 0, 190, 
	48, 0, 190, 0, 50, 190, 47, 48, 
	0, 190, 48, 0, 45, 52, 0, 45, 
	0, 45, 54, 51, 52, 0, 45, 52, 
	0, 43, 56, 0, 43, 0, 43, 58, 
	55, 56, 0, 43, 56, 0, 41, 62, 
	60, 66, 66, 0, 41, 62, 61, 61, 
	61, 0, 62, 0, 48, 63, 63, 63, 
	0, 190, 64, 64, 64, 0, 190, 65, 
	65, 65, 0, 190, 48, 48, 48, 0, 
	62, 61, 61, 61, 0, 62, 66, 66, 
	66, 0, 41, 69, 62, 59, 70, 67, 
	67, 0, 41, 62, 60, 66, 66, 66, 
	0, 41, 62, 66, 66, 66, 0, 41, 
	62, 70, 67, 67, 0, 190, 63, 63, 
	63, 0, 62, 67, 67, 67, 0, 82, 
	190, 75, 85, 86, 86, 0, 41, 79, 
	190, 76, 81, 81, 0, 41, 79, 190, 
	77, 80, 80, 0, 41, 79, 190, 78, 
	78, 78, 0, 79, 190, 0, 63, 63, 
	63, 0, 79, 190, 78, 78, 78, 0, 
	79, 190, 80, 80, 80, 0, 41, 83, 
	79, 190, 76, 84, 81, 81, 0, 41, 
	79, 190, 77, 80, 80, 80, 0, 41, 
	79, 190, 80, 80, 80, 0, 41, 79, 
	190, 84, 81, 81, 0, 79, 190, 81, 
	81, 81, 0, 95, 190, 88, 98, 99, 
	99, 0, 41, 92, 190, 89, 94, 94, 
	0, 41, 92, 190, 90, 93, 93, 0, 
	41, 92, 190, 91, 91, 91, 0, 92, 
	190, 0, 82, 75, 85, 86, 86, 0, 
	92, 190, 91, 91, 91, 0, 92, 190, 
	93, 93, 93, 0, 41, 96, 92, 190, 
	89, 97, 94, 94, 0, 41, 92, 190, 
	90, 93, 93, 93, 0, 41, 92, 190, 
	93, 93, 93, 0, 41, 92, 190, 97, 
	94, 94, 0, 92, 190, 94, 94, 94, 
	0, 108, 190, 101, 111, 112, 112, 0, 
	41, 105, 190, 102, 107, 107, 0, 41, 
	105, 190, 103, 106, 106, 0, 41, 105, 
	190, 104, 104, 104, 0, 105, 190, 0, 
	95, 88, 98, 99, 99, 0, 105, 190, 
	104, 104, 104, 0, 105, 190, 106, 106, 
	106, 0, 41, 109, 105, 190, 102, 110, 
	107, 107, 0, 41, 105, 190, 103, 106, 
	106, 106, 0, 41, 105, 190, 106, 106, 
	106, 0, 41, 105, 190, 110, 107, 107, 
	0, 105, 190, 107, 107, 107, 0, 121, 
	190, 114, 124, 125, 125, 0, 41, 118, 
	190, 115, 120, 120, 0, 41, 118, 190, 
	116, 119, 119, 0, 41, 118, 190, 117, 
	117, 117, 0, 118, 190, 0, 108, 101, 
	111, 112, 112, 0, 118, 190, 117, 117, 
	117, 0, 118, 190, 119, 119, 119, 0, 
	41, 122, 118, 190, 115, 123, 120, 120, 
	0, 41, 118, 190, 116, 119, 119, 119, 
	0, 41, 118, 190, 119, 119, 119, 0, 
	41, 118, 190, 123, 120, 120, 0, 118, 
	190, 120, 120, 120, 0, 134, 190, 127, 
	137, 138, 138, 0, 41, 131, 190, 128, 
	133, 133, 0, 41, 131, 190, 129, 132, 
	132, 0, 41, 131, 190, 130, 130, 130, 
	0, 131, 190, 0, 121, 114, 124, 125, 
	125, 0, 131, 190, 130, 130, 130, 0, 
	131, 190, 132, 132, 132, 0, 41, 135, 
	131, 190, 128, 136, 133, 133, 0, 41, 
	131, 190, 129, 132, 132, 132, 0, 41, 
	131, 190, 132, 132, 132, 0, 41, 131, 
	190, 136, 133, 133, 0, 131, 190, 133, 
	133, 133, 0, 140, 0, 141, 141, 141, 
	0, 145, 190, 142, 142, 142, 0, 145, 
	190, 143, 143, 143, 0, 145, 190, 144, 
	144, 144, 0, 145, 190, 0, 146, 146, 
	146, 0, 150, 147, 147, 147, 0, 150, 
	148, 148, 148, 0, 150, 149, 149, 149, 
	0, 150, 0, 151, 151, 151, 0, 155, 
	152, 152, 152, 0, 155, 153, 153, 153, 
	0, 155, 154, 154, 154, 0, 155, 0, 
	156, 156, 156, 0, 160, 157, 157, 157, 
	0, 160, 158, 158, 158, 0, 160, 159, 
	159, 159, 0, 160, 0, 161, 161, 161, 
	0, 165, 162, 162, 162, 0, 165, 163, 
	163, 163, 0, 165, 164, 164, 164, 0, 
	165, 0, 172, 166, 175, 176, 176, 0, 
	41, 79, 167, 171, 171, 0, 41, 79, 
	168, 170, 170, 0, 41, 79, 169, 169, 
	169, 0, 79, 0, 79, 169, 169, 169, 
	0, 79, 170, 170, 170, 0, 41, 173, 
	79, 167, 174, 171, 171, 0, 41, 79, 
	168, 170, 170, 170, 0, 41, 79, 170, 
	170, 170, 0, 41, 79, 174, 171, 171, 
	0, 79, 171, 171, 171, 0, 178, 179, 
	179, 179, 0, 48, 48, 48, 190, 48, 
	48, 48, 48, 48, 48, 0, 178, 0, 
	180, 193, 180, 180, 180, 180, 0, 182, 
	185, 183, 5, 186, 185, 185, 184, 185, 
	185, 185, 185, 192, 192, 0, 183, 184, 
	0, 183, 1, 183, 183, 183, 183, 183, 
	183, 0, 184, 183, 3, 184, 184, 184, 
	184, 184, 184, 0, 183, 184, 184, 0, 
	184, 183, 3, 187, 184, 184, 184, 184, 
	184, 184, 0, 188, 183, 7, 184, 188, 
	184, 189, 9, 188, 188, 188, 188, 188, 
	0, 188, 183, 7, 184, 188, 184, 189, 
	188, 188, 188, 188, 188, 0, 184, 183, 
	3, 184, 9, 184, 184, 184, 184, 184, 
	0, 183, 184, 191, 184, 0, 183, 184, 
	184, 191, 0, 183, 180, 184, 193, 184, 
	180, 180, 180, 0, 182, 185, 183, 5, 
	186, 185, 184, 185, 185, 185, 185, 185, 
	0, 0
]

class << self
	attr_accessor :m_uri_start
end
self.m_uri_start = 181;
class << self
	attr_accessor :m_uri_first_final
end
self.m_uri_first_final = 181;
class << self
	attr_accessor :m_uri_error
end
self.m_uri_error = 0;

class << self
	attr_accessor :m_uri_en_main
end
self.m_uri_en_main = 181;


# line 19 "uri_parser.rl"
    
# line 491 "uri_parser.rb"
begin
	p ||= 0
	pe ||= data.length
	cs = m_uri_start
end

# line 20 "uri_parser.rl"
    
# line 500 "uri_parser.rb"
begin
	_klen, _trans, _keys = nil
	_goto_level = 0
	_resume = 10
	_eof_trans = 15
	_again = 20
	_test_eof = 30
	_out = 40
	while true
	_trigger_goto = false
	if _goto_level <= 0
	if p == pe
		_goto_level = _test_eof
		next
	end
	if cs == 0
		_goto_level = _out
		next
	end
	end
	if _goto_level <= _resume
	_keys = _m_uri_key_offsets[cs]
	_trans = _m_uri_index_offsets[cs]
	_klen = _m_uri_single_lengths[cs]
	_break_match = false
	
	begin
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + _klen - 1

	     loop do
	        break if _upper < _lower
	        _mid = _lower + ( (_upper - _lower) >> 1 )

	        if data[p].ord < _m_uri_trans_keys[_mid]
	           _upper = _mid - 1
	        elsif data[p].ord > _m_uri_trans_keys[_mid]
	           _lower = _mid + 1
	        else
	           _trans += (_mid - _keys)
	           _break_match = true
	           break
	        end
	     end # loop
	     break if _break_match
	     _keys += _klen
	     _trans += _klen
	  end
	  _klen = _m_uri_range_lengths[cs]
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + (_klen << 1) - 2
	     loop do
	        break if _upper < _lower
	        _mid = _lower + (((_upper-_lower) >> 1) & ~1)
	        if data[p].ord < _m_uri_trans_keys[_mid]
	          _upper = _mid - 2
	        elsif data[p].ord > _m_uri_trans_keys[_mid+1]
	          _lower = _mid + 2
	        else
	          _trans += ((_mid - _keys) >> 1)
	          _break_match = true
	          break
	        end
	     end # loop
	     break if _break_match
	     _trans += _klen
	  end
	end while false
	cs = _m_uri_trans_targs[_trans]
	end
	if _goto_level <= _again
	if cs == 0
		_goto_level = _out
		next
	end
	p += 1
	if p != pe
		_goto_level = _resume
		next
	end
	end
	if _goto_level <= _test_eof
	end
	if _goto_level <= _out
		break
	end
	end
	end

# line 21 "uri_parser.rl"
    #%
    if cs >= m_uri_first_final
      @is_valid = true
    end
  end

  def is_valid?
    @is_valid
  end
end

o = MachineURI.new("mailto:user@domain.com")
puts o.is_valid?
