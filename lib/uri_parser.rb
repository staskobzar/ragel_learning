
# line 1 "lib/uri_parser.rl"
#
# @LANG: ruby
# Parsing URI
# 

=begin

# line 17 "lib/uri_parser.rl"

=end
class URIParserError < Exception; end

class MachineURI
  attr_accessor :scheme, :host, :userinfo, :port, :query, :fragment
  def initialize(data)
    @is_valid = false
    eof = data.length
    start = 0
    
# line 23 "lib/uri_parser.rb"
class << self
	attr_accessor :_m_uri_actions
	private :_m_uri_actions, :_m_uri_actions=
end
self._m_uri_actions = [
	0, 1, 0, 1, 1, 1, 2, 1, 
	3, 1, 4, 1, 5, 1, 6, 1, 
	8, 1, 9, 1, 10, 2, 6, 1, 
	2, 7, 2, 2, 7, 6, 2, 8, 
	3, 2, 9, 4, 2, 10, 5, 3, 
	7, 6, 1
]

class << self
	attr_accessor :_m_uri_key_offsets
	private :_m_uri_key_offsets, :_m_uri_key_offsets=
end
self._m_uri_key_offsets = [
	0, 0, 15, 21, 27, 33, 39, 45, 
	51, 57, 63, 69, 75, 89, 95, 101, 
	107, 113, 121, 128, 135, 142, 143, 150, 
	157, 164, 171, 172, 179, 186, 193, 200, 
	201, 208, 215, 222, 229, 230, 237, 244, 
	251, 258, 259, 266, 273, 280, 287, 288, 
	298, 306, 311, 314, 319, 322, 327, 330, 
	333, 334, 340, 343, 346, 347, 353, 356, 
	359, 360, 366, 369, 377, 385, 386, 393, 
	400, 407, 414, 421, 428, 439, 449, 457, 
	465, 472, 479, 489, 498, 507, 516, 518, 
	524, 532, 540, 552, 563, 572, 581, 589, 
	599, 608, 617, 626, 628, 637, 645, 653, 
	665, 676, 685, 694, 702, 712, 721, 730, 
	739, 741, 750, 758, 766, 778, 789, 798, 
	807, 815, 825, 834, 843, 852, 854, 863, 
	871, 879, 891, 902, 911, 920, 928, 938, 
	947, 956, 965, 967, 976, 984, 992, 1004, 
	1015, 1024, 1033, 1041, 1042, 1048, 1056, 1064, 
	1072, 1074, 1080, 1087, 1094, 1101, 1102, 1108, 
	1115, 1122, 1129, 1130, 1136, 1143, 1150, 1157, 
	1158, 1164, 1171, 1178, 1185, 1186, 1195, 1203, 
	1211, 1219, 1220, 1227, 1234, 1245, 1255, 1263, 
	1271, 1278, 1284, 1291, 1304, 1318, 1331, 1333, 
	1344, 1355, 1367, 1379, 1394, 1407, 1421, 1438, 
	1454, 1473, 1489, 1504, 1509, 1514, 1518, 1537
]

class << self
	attr_accessor :_m_uri_trans_keys
	private :_m_uri_trans_keys, :_m_uri_trans_keys=
end
self._m_uri_trans_keys = [
	0, 33, 37, 47, 59, 61, 64, 95, 
	126, 36, 57, 65, 90, 97, 122, 48, 
	57, 65, 70, 97, 102, 48, 57, 65, 
	70, 97, 102, 48, 57, 65, 70, 97, 
	102, 48, 57, 65, 70, 97, 102, 48, 
	57, 65, 70, 97, 102, 48, 57, 65, 
	70, 97, 102, 48, 57, 65, 70, 97, 
	102, 48, 57, 65, 70, 97, 102, 48, 
	57, 65, 70, 97, 102, 48, 57, 65, 
	70, 97, 102, 33, 37, 61, 64, 95, 
	126, 36, 46, 48, 59, 65, 90, 97, 
	122, 48, 57, 65, 70, 97, 102, 48, 
	57, 65, 70, 97, 102, 48, 57, 65, 
	70, 97, 102, 48, 57, 65, 70, 97, 
	102, 58, 118, 48, 57, 65, 70, 97, 
	102, 58, 48, 57, 65, 70, 97, 102, 
	58, 48, 57, 65, 70, 97, 102, 58, 
	48, 57, 65, 70, 97, 102, 58, 58, 
	48, 57, 65, 70, 97, 102, 58, 48, 
	57, 65, 70, 97, 102, 58, 48, 57, 
	65, 70, 97, 102, 58, 48, 57, 65, 
	70, 97, 102, 58, 58, 48, 57, 65, 
	70, 97, 102, 58, 48, 57, 65, 70, 
	97, 102, 58, 48, 57, 65, 70, 97, 
	102, 58, 48, 57, 65, 70, 97, 102, 
	58, 58, 48, 57, 65, 70, 97, 102, 
	58, 48, 57, 65, 70, 97, 102, 58, 
	48, 57, 65, 70, 97, 102, 58, 48, 
	57, 65, 70, 97, 102, 58, 58, 48, 
	57, 65, 70, 97, 102, 58, 48, 57, 
	65, 70, 97, 102, 58, 48, 57, 65, 
	70, 97, 102, 58, 48, 57, 65, 70, 
	97, 102, 58, 58, 48, 57, 65, 70, 
	97, 102, 58, 48, 57, 65, 70, 97, 
	102, 58, 48, 57, 65, 70, 97, 102, 
	58, 48, 57, 65, 70, 97, 102, 58, 
	50, 58, 48, 49, 51, 57, 65, 70, 
	97, 102, 46, 58, 48, 57, 65, 70, 
	97, 102, 50, 48, 49, 51, 57, 46, 
	48, 57, 50, 48, 49, 51, 57, 46, 
	48, 57, 50, 48, 49, 51, 57, 93, 
	48, 57, 93, 48, 57, 93, 53, 93, 
	48, 52, 54, 57, 93, 48, 53, 46, 
	48, 57, 46, 46, 53, 48, 52, 54, 
	57, 46, 48, 53, 46, 48, 57, 46, 
	46, 53, 48, 52, 54, 57, 46, 48, 
	53, 46, 58, 48, 57, 65, 70, 97, 
	102, 46, 58, 48, 57, 65, 70, 97, 
	102, 58, 58, 48, 57, 65, 70, 97, 
	102, 93, 48, 57, 65, 70, 97, 102, 
	93, 48, 57, 65, 70, 97, 102, 93, 
	48, 57, 65, 70, 97, 102, 58, 48, 
	57, 65, 70, 97, 102, 58, 48, 57, 
	65, 70, 97, 102, 46, 53, 58, 48, 
	52, 54, 57, 65, 70, 97, 102, 46, 
	58, 48, 53, 54, 57, 65, 70, 97, 
	102, 46, 58, 48, 57, 65, 70, 97, 
	102, 46, 58, 48, 57, 65, 70, 97, 
	102, 93, 48, 57, 65, 70, 97, 102, 
	58, 48, 57, 65, 70, 97, 102, 50, 
	93, 48, 49, 51, 57, 65, 70, 97, 
	102, 46, 58, 93, 48, 57, 65, 70, 
	97, 102, 46, 58, 93, 48, 57, 65, 
	70, 97, 102, 46, 58, 93, 48, 57, 
	65, 70, 97, 102, 58, 93, 48, 57, 
	65, 70, 97, 102, 58, 93, 48, 57, 
	65, 70, 97, 102, 58, 93, 48, 57, 
	65, 70, 97, 102, 46, 53, 58, 93, 
	48, 52, 54, 57, 65, 70, 97, 102, 
	46, 58, 93, 48, 53, 54, 57, 65, 
	70, 97, 102, 46, 58, 93, 48, 57, 
	65, 70, 97, 102, 46, 58, 93, 48, 
	57, 65, 70, 97, 102, 58, 93, 48, 
	57, 65, 70, 97, 102, 50, 93, 48, 
	49, 51, 57, 65, 70, 97, 102, 46, 
	58, 93, 48, 57, 65, 70, 97, 102, 
	46, 58, 93, 48, 57, 65, 70, 97, 
	102, 46, 58, 93, 48, 57, 65, 70, 
	97, 102, 58, 93, 50, 48, 49, 51, 
	57, 65, 70, 97, 102, 58, 93, 48, 
	57, 65, 70, 97, 102, 58, 93, 48, 
	57, 65, 70, 97, 102, 46, 53, 58, 
	93, 48, 52, 54, 57, 65, 70, 97, 
	102, 46, 58, 93, 48, 53, 54, 57, 
	65, 70, 97, 102, 46, 58, 93, 48, 
	57, 65, 70, 97, 102, 46, 58, 93, 
	48, 57, 65, 70, 97, 102, 58, 93, 
	48, 57, 65, 70, 97, 102, 50, 93, 
	48, 49, 51, 57, 65, 70, 97, 102, 
	46, 58, 93, 48, 57, 65, 70, 97, 
	102, 46, 58, 93, 48, 57, 65, 70, 
	97, 102, 46, 58, 93, 48, 57, 65, 
	70, 97, 102, 58, 93, 50, 48, 49, 
	51, 57, 65, 70, 97, 102, 58, 93, 
	48, 57, 65, 70, 97, 102, 58, 93, 
	48, 57, 65, 70, 97, 102, 46, 53, 
	58, 93, 48, 52, 54, 57, 65, 70, 
	97, 102, 46, 58, 93, 48, 53, 54, 
	57, 65, 70, 97, 102, 46, 58, 93, 
	48, 57, 65, 70, 97, 102, 46, 58, 
	93, 48, 57, 65, 70, 97, 102, 58, 
	93, 48, 57, 65, 70, 97, 102, 50, 
	93, 48, 49, 51, 57, 65, 70, 97, 
	102, 46, 58, 93, 48, 57, 65, 70, 
	97, 102, 46, 58, 93, 48, 57, 65, 
	70, 97, 102, 46, 58, 93, 48, 57, 
	65, 70, 97, 102, 58, 93, 50, 48, 
	49, 51, 57, 65, 70, 97, 102, 58, 
	93, 48, 57, 65, 70, 97, 102, 58, 
	93, 48, 57, 65, 70, 97, 102, 46, 
	53, 58, 93, 48, 52, 54, 57, 65, 
	70, 97, 102, 46, 58, 93, 48, 53, 
	54, 57, 65, 70, 97, 102, 46, 58, 
	93, 48, 57, 65, 70, 97, 102, 46, 
	58, 93, 48, 57, 65, 70, 97, 102, 
	58, 93, 48, 57, 65, 70, 97, 102, 
	50, 93, 48, 49, 51, 57, 65, 70, 
	97, 102, 46, 58, 93, 48, 57, 65, 
	70, 97, 102, 46, 58, 93, 48, 57, 
	65, 70, 97, 102, 46, 58, 93, 48, 
	57, 65, 70, 97, 102, 58, 93, 50, 
	48, 49, 51, 57, 65, 70, 97, 102, 
	58, 93, 48, 57, 65, 70, 97, 102, 
	58, 93, 48, 57, 65, 70, 97, 102, 
	46, 53, 58, 93, 48, 52, 54, 57, 
	65, 70, 97, 102, 46, 58, 93, 48, 
	53, 54, 57, 65, 70, 97, 102, 46, 
	58, 93, 48, 57, 65, 70, 97, 102, 
	46, 58, 93, 48, 57, 65, 70, 97, 
	102, 58, 93, 48, 57, 65, 70, 97, 
	102, 58, 48, 57, 65, 70, 97, 102, 
	58, 93, 48, 57, 65, 70, 97, 102, 
	58, 93, 48, 57, 65, 70, 97, 102, 
	58, 93, 48, 57, 65, 70, 97, 102, 
	58, 93, 48, 57, 65, 70, 97, 102, 
	58, 48, 57, 65, 70, 97, 102, 58, 
	48, 57, 65, 70, 97, 102, 58, 48, 
	57, 65, 70, 97, 102, 58, 48, 57, 
	65, 70, 97, 102, 58, 48, 57, 65, 
	70, 97, 102, 58, 48, 57, 65, 70, 
	97, 102, 58, 48, 57, 65, 70, 97, 
	102, 58, 48, 57, 65, 70, 97, 102, 
	58, 48, 57, 65, 70, 97, 102, 58, 
	48, 57, 65, 70, 97, 102, 58, 48, 
	57, 65, 70, 97, 102, 58, 48, 57, 
	65, 70, 97, 102, 58, 48, 57, 65, 
	70, 97, 102, 58, 48, 57, 65, 70, 
	97, 102, 58, 48, 57, 65, 70, 97, 
	102, 58, 50, 48, 49, 51, 57, 65, 
	70, 97, 102, 46, 58, 48, 57, 65, 
	70, 97, 102, 46, 58, 48, 57, 65, 
	70, 97, 102, 46, 58, 48, 57, 65, 
	70, 97, 102, 58, 58, 48, 57, 65, 
	70, 97, 102, 58, 48, 57, 65, 70, 
	97, 102, 46, 53, 58, 48, 52, 54, 
	57, 65, 70, 97, 102, 46, 58, 48, 
	53, 54, 57, 65, 70, 97, 102, 46, 
	58, 48, 57, 65, 70, 97, 102, 46, 
	58, 48, 57, 65, 70, 97, 102, 58, 
	48, 57, 65, 70, 97, 102, 48, 57, 
	65, 70, 97, 102, 46, 48, 57, 65, 
	70, 97, 102, 33, 36, 61, 95, 126, 
	38, 46, 48, 59, 65, 90, 97, 122, 
	33, 36, 61, 93, 95, 126, 38, 46, 
	48, 59, 65, 90, 97, 122, 0, 33, 
	37, 47, 61, 95, 126, 36, 59, 64, 
	90, 97, 122, 35, 63, 33, 37, 61, 
	95, 126, 36, 59, 63, 90, 97, 122, 
	33, 37, 61, 95, 126, 36, 59, 63, 
	90, 97, 122, 33, 35, 37, 61, 95, 
	126, 36, 59, 63, 90, 97, 122, 33, 
	35, 37, 61, 95, 126, 36, 59, 63, 
	90, 97, 122, 33, 35, 37, 47, 59, 
	61, 63, 95, 126, 36, 57, 64, 90, 
	97, 122, 33, 35, 37, 61, 63, 95, 
	126, 36, 59, 64, 90, 97, 122, 33, 
	35, 37, 47, 61, 63, 95, 126, 36, 
	59, 64, 90, 97, 122, 33, 35, 37, 
	47, 58, 61, 63, 64, 91, 95, 126, 
	36, 59, 65, 90, 97, 122, 33, 35, 
	37, 47, 58, 61, 63, 64, 95, 126, 
	36, 59, 65, 90, 97, 122, 33, 35, 
	37, 47, 61, 63, 64, 95, 126, 36, 
	46, 48, 57, 58, 59, 65, 90, 97, 
	122, 33, 35, 37, 47, 58, 61, 63, 
	91, 95, 126, 36, 59, 65, 90, 97, 
	122, 33, 35, 37, 47, 58, 61, 63, 
	95, 126, 36, 59, 65, 90, 97, 122, 
	35, 47, 63, 48, 57, 35, 47, 63, 
	48, 57, 35, 47, 58, 63, 33, 35, 
	37, 47, 61, 63, 64, 95, 126, 36, 
	46, 48, 57, 58, 59, 65, 90, 97, 
	122, 33, 35, 37, 43, 47, 58, 59, 
	61, 63, 64, 95, 126, 36, 44, 45, 
	57, 65, 90, 97, 122, 0
]

class << self
	attr_accessor :_m_uri_single_lengths
	private :_m_uri_single_lengths, :_m_uri_single_lengths=
end
self._m_uri_single_lengths = [
	0, 9, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 6, 0, 0, 0, 
	0, 2, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 2, 
	2, 1, 1, 1, 1, 1, 1, 1, 
	1, 2, 1, 1, 1, 2, 1, 1, 
	1, 2, 1, 2, 2, 1, 1, 1, 
	1, 1, 1, 1, 3, 2, 2, 2, 
	1, 1, 2, 3, 3, 3, 2, 0, 
	2, 2, 4, 3, 3, 3, 2, 2, 
	3, 3, 3, 2, 1, 2, 2, 4, 
	3, 3, 3, 2, 2, 3, 3, 3, 
	2, 1, 2, 2, 4, 3, 3, 3, 
	2, 2, 3, 3, 3, 2, 1, 2, 
	2, 4, 3, 3, 3, 2, 2, 3, 
	3, 3, 2, 1, 2, 2, 4, 3, 
	3, 3, 2, 1, 0, 2, 2, 2, 
	2, 0, 1, 1, 1, 1, 0, 1, 
	1, 1, 1, 0, 1, 1, 1, 1, 
	0, 1, 1, 1, 1, 1, 2, 2, 
	2, 1, 1, 1, 3, 2, 2, 2, 
	1, 0, 1, 5, 6, 7, 2, 5, 
	5, 6, 6, 9, 7, 8, 11, 10, 
	9, 10, 9, 3, 3, 4, 9, 12
]

class << self
	attr_accessor :_m_uri_range_lengths
	private :_m_uri_range_lengths, :_m_uri_range_lengths=
end
self._m_uri_range_lengths = [
	0, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 4, 3, 3, 3, 
	3, 3, 3, 3, 3, 0, 3, 3, 
	3, 3, 0, 3, 3, 3, 3, 0, 
	3, 3, 3, 3, 0, 3, 3, 3, 
	3, 0, 3, 3, 3, 3, 0, 4, 
	3, 2, 1, 2, 1, 2, 1, 1, 
	0, 2, 1, 1, 0, 2, 1, 1, 
	0, 2, 1, 3, 3, 0, 3, 3, 
	3, 3, 3, 3, 4, 4, 3, 3, 
	3, 3, 4, 3, 3, 3, 0, 3, 
	3, 3, 4, 4, 3, 3, 3, 4, 
	3, 3, 3, 0, 4, 3, 3, 4, 
	4, 3, 3, 3, 4, 3, 3, 3, 
	0, 4, 3, 3, 4, 4, 3, 3, 
	3, 4, 3, 3, 3, 0, 4, 3, 
	3, 4, 4, 3, 3, 3, 4, 3, 
	3, 3, 0, 4, 3, 3, 4, 4, 
	3, 3, 3, 0, 3, 3, 3, 3, 
	0, 3, 3, 3, 3, 0, 3, 3, 
	3, 3, 0, 3, 3, 3, 3, 0, 
	3, 3, 3, 3, 0, 4, 3, 3, 
	3, 0, 3, 3, 4, 4, 3, 3, 
	3, 3, 3, 4, 4, 3, 0, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	5, 3, 3, 1, 1, 0, 5, 4
]

class << self
	attr_accessor :_m_uri_index_offsets
	private :_m_uri_index_offsets, :_m_uri_index_offsets=
end
self._m_uri_index_offsets = [
	0, 0, 13, 17, 21, 25, 29, 33, 
	37, 41, 45, 49, 53, 64, 68, 72, 
	76, 80, 86, 91, 96, 101, 103, 108, 
	113, 118, 123, 125, 130, 135, 140, 145, 
	147, 152, 157, 162, 167, 169, 174, 179, 
	184, 189, 191, 196, 201, 206, 211, 213, 
	220, 226, 230, 233, 237, 240, 244, 247, 
	250, 252, 257, 260, 263, 265, 270, 273, 
	276, 278, 283, 286, 292, 298, 300, 305, 
	310, 315, 320, 325, 330, 338, 345, 351, 
	357, 362, 367, 374, 381, 388, 395, 398, 
	402, 408, 414, 423, 431, 438, 445, 451, 
	458, 465, 472, 479, 482, 488, 494, 500, 
	509, 517, 524, 531, 537, 544, 551, 558, 
	565, 568, 574, 580, 586, 595, 603, 610, 
	617, 623, 630, 637, 644, 651, 654, 660, 
	666, 672, 681, 689, 696, 703, 709, 716, 
	723, 730, 737, 740, 746, 752, 758, 767, 
	775, 782, 789, 795, 797, 801, 807, 813, 
	819, 822, 826, 831, 836, 841, 843, 847, 
	852, 857, 862, 864, 868, 873, 878, 883, 
	885, 889, 894, 899, 904, 906, 912, 918, 
	924, 930, 932, 937, 942, 950, 957, 963, 
	969, 974, 978, 983, 993, 1004, 1015, 1018, 
	1027, 1036, 1046, 1056, 1069, 1080, 1092, 1107, 
	1121, 1136, 1150, 1163, 1168, 1173, 1178, 1193
]

class << self
	attr_accessor :_m_uri_indicies
	private :_m_uri_indicies, :_m_uri_indicies=
end
self._m_uri_indicies = [
	0, 2, 3, 4, 2, 2, 2, 2, 
	2, 2, 5, 5, 1, 6, 6, 6, 
	1, 7, 7, 7, 1, 8, 8, 8, 
	1, 9, 9, 9, 1, 10, 10, 10, 
	1, 2, 2, 2, 1, 11, 11, 11, 
	1, 12, 12, 12, 1, 13, 13, 13, 
	1, 14, 14, 14, 1, 15, 16, 15, 
	17, 15, 15, 15, 15, 15, 15, 1, 
	18, 18, 18, 1, 15, 15, 15, 1, 
	19, 19, 19, 1, 20, 20, 20, 1, 
	22, 23, 21, 21, 21, 1, 25, 24, 
	24, 24, 1, 25, 26, 26, 26, 1, 
	25, 27, 27, 27, 1, 25, 1, 29, 
	28, 28, 28, 1, 31, 30, 30, 30, 
	1, 31, 32, 32, 32, 1, 31, 33, 
	33, 33, 1, 31, 1, 35, 34, 34, 
	34, 1, 37, 36, 36, 36, 1, 37, 
	38, 38, 38, 1, 37, 39, 39, 39, 
	1, 37, 1, 41, 40, 40, 40, 1, 
	43, 42, 42, 42, 1, 43, 44, 44, 
	44, 1, 43, 45, 45, 45, 1, 43, 
	1, 47, 46, 46, 46, 1, 49, 48, 
	48, 48, 1, 49, 50, 50, 50, 1, 
	49, 51, 51, 51, 1, 49, 1, 53, 
	52, 52, 52, 1, 55, 54, 54, 54, 
	1, 55, 56, 56, 56, 1, 55, 57, 
	57, 57, 1, 55, 1, 59, 61, 58, 
	60, 62, 62, 1, 63, 65, 64, 66, 
	66, 1, 68, 67, 69, 1, 70, 69, 
	1, 72, 71, 73, 1, 74, 73, 1, 
	76, 75, 77, 1, 78, 77, 1, 78, 
	79, 1, 78, 1, 80, 78, 77, 79, 
	1, 78, 79, 1, 74, 81, 1, 74, 
	1, 74, 82, 73, 81, 1, 74, 81, 
	1, 70, 83, 1, 70, 1, 70, 84, 
	69, 83, 1, 70, 83, 1, 63, 65, 
	85, 86, 86, 1, 63, 65, 87, 87, 
	87, 1, 65, 1, 79, 88, 88, 88, 
	1, 78, 89, 89, 89, 1, 78, 90, 
	90, 90, 1, 78, 79, 79, 79, 1, 
	65, 87, 87, 87, 1, 65, 86, 86, 
	86, 1, 63, 91, 65, 64, 92, 66, 
	66, 1, 63, 65, 85, 86, 86, 86, 
	1, 63, 65, 86, 86, 86, 1, 63, 
	65, 92, 66, 66, 1, 78, 88, 88, 
	88, 1, 65, 66, 66, 66, 1, 94, 
	78, 93, 95, 96, 96, 1, 63, 98, 
	78, 97, 99, 99, 1, 63, 98, 78, 
	100, 101, 101, 1, 63, 98, 78, 102, 
	102, 102, 1, 98, 78, 1, 88, 88, 
	88, 1, 98, 78, 102, 102, 102, 1, 
	98, 78, 101, 101, 101, 1, 63, 103, 
	98, 78, 97, 104, 99, 99, 1, 63, 
	98, 78, 100, 101, 101, 101, 1, 63, 
	98, 78, 101, 101, 101, 1, 63, 98, 
	78, 104, 99, 99, 1, 98, 78, 99, 
	99, 99, 1, 106, 78, 105, 107, 108, 
	108, 1, 63, 110, 78, 109, 111, 111, 
	1, 63, 110, 78, 112, 113, 113, 1, 
	63, 110, 78, 114, 114, 114, 1, 110, 
	78, 1, 94, 93, 95, 96, 96, 1, 
	110, 78, 114, 114, 114, 1, 110, 78, 
	113, 113, 113, 1, 63, 115, 110, 78, 
	109, 116, 111, 111, 1, 63, 110, 78, 
	112, 113, 113, 113, 1, 63, 110, 78, 
	113, 113, 113, 1, 63, 110, 78, 116, 
	111, 111, 1, 110, 78, 111, 111, 111, 
	1, 118, 78, 117, 119, 120, 120, 1, 
	63, 122, 78, 121, 123, 123, 1, 63, 
	122, 78, 124, 125, 125, 1, 63, 122, 
	78, 126, 126, 126, 1, 122, 78, 1, 
	106, 105, 107, 108, 108, 1, 122, 78, 
	126, 126, 126, 1, 122, 78, 125, 125, 
	125, 1, 63, 127, 122, 78, 121, 128, 
	123, 123, 1, 63, 122, 78, 124, 125, 
	125, 125, 1, 63, 122, 78, 125, 125, 
	125, 1, 63, 122, 78, 128, 123, 123, 
	1, 122, 78, 123, 123, 123, 1, 130, 
	78, 129, 131, 132, 132, 1, 63, 134, 
	78, 133, 135, 135, 1, 63, 134, 78, 
	136, 137, 137, 1, 63, 134, 78, 138, 
	138, 138, 1, 134, 78, 1, 118, 117, 
	119, 120, 120, 1, 134, 78, 138, 138, 
	138, 1, 134, 78, 137, 137, 137, 1, 
	63, 139, 134, 78, 133, 140, 135, 135, 
	1, 63, 134, 78, 136, 137, 137, 137, 
	1, 63, 134, 78, 137, 137, 137, 1, 
	63, 134, 78, 140, 135, 135, 1, 134, 
	78, 135, 135, 135, 1, 142, 78, 141, 
	143, 144, 144, 1, 63, 146, 78, 145, 
	147, 147, 1, 63, 146, 78, 148, 149, 
	149, 1, 63, 146, 78, 150, 150, 150, 
	1, 146, 78, 1, 130, 129, 131, 132, 
	132, 1, 146, 78, 150, 150, 150, 1, 
	146, 78, 149, 149, 149, 1, 63, 151, 
	146, 78, 145, 152, 147, 147, 1, 63, 
	146, 78, 148, 149, 149, 149, 1, 63, 
	146, 78, 149, 149, 149, 1, 63, 146, 
	78, 152, 147, 147, 1, 146, 78, 147, 
	147, 147, 1, 153, 1, 154, 154, 154, 
	1, 156, 78, 155, 155, 155, 1, 156, 
	78, 157, 157, 157, 1, 156, 78, 158, 
	158, 158, 1, 156, 78, 1, 159, 159, 
	159, 1, 161, 160, 160, 160, 1, 161, 
	162, 162, 162, 1, 161, 163, 163, 163, 
	1, 161, 1, 164, 164, 164, 1, 166, 
	165, 165, 165, 1, 166, 167, 167, 167, 
	1, 166, 168, 168, 168, 1, 166, 1, 
	169, 169, 169, 1, 171, 170, 170, 170, 
	1, 171, 172, 172, 172, 1, 171, 173, 
	173, 173, 1, 171, 1, 174, 174, 174, 
	1, 176, 175, 175, 175, 1, 176, 177, 
	177, 177, 1, 176, 178, 178, 178, 1, 
	176, 1, 180, 179, 181, 182, 182, 1, 
	63, 98, 183, 184, 184, 1, 63, 98, 
	185, 186, 186, 1, 63, 98, 187, 187, 
	187, 1, 98, 1, 98, 187, 187, 187, 
	1, 98, 186, 186, 186, 1, 63, 188, 
	98, 183, 189, 184, 184, 1, 63, 98, 
	185, 186, 186, 186, 1, 63, 98, 186, 
	186, 186, 1, 63, 98, 189, 184, 184, 
	1, 98, 184, 184, 184, 1, 190, 190, 
	190, 1, 191, 190, 190, 190, 1, 192, 
	192, 192, 192, 192, 192, 192, 192, 192, 
	1, 192, 192, 192, 78, 192, 192, 192, 
	192, 192, 192, 1, 0, 12, 193, 4, 
	12, 12, 12, 12, 12, 12, 1, 194, 
	195, 1, 196, 197, 196, 196, 196, 196, 
	196, 196, 1, 7, 198, 7, 7, 7, 
	7, 7, 7, 1, 199, 200, 201, 199, 
	199, 199, 199, 199, 199, 1, 9, 202, 
	203, 9, 9, 9, 9, 9, 9, 1, 
	2, 194, 3, 12, 2, 2, 195, 2, 
	2, 2, 2, 2, 1, 12, 194, 193, 
	12, 195, 12, 12, 12, 12, 12, 1, 
	12, 194, 193, 204, 12, 195, 12, 12, 
	12, 12, 12, 1, 205, 206, 207, 208, 
	209, 205, 210, 211, 212, 205, 205, 205, 
	205, 205, 1, 14, 213, 214, 215, 216, 
	14, 217, 17, 14, 14, 14, 14, 14, 
	1, 15, 218, 16, 219, 15, 221, 17, 
	15, 15, 15, 220, 15, 15, 15, 1, 
	222, 206, 223, 208, 224, 222, 210, 212, 
	222, 222, 222, 222, 222, 1, 20, 213, 
	225, 215, 226, 20, 217, 20, 20, 20, 
	20, 20, 1, 218, 219, 221, 227, 1, 
	228, 229, 231, 230, 1, 213, 215, 226, 
	217, 1, 15, 228, 16, 229, 15, 231, 
	17, 15, 15, 15, 232, 15, 15, 15, 
	1, 2, 194, 3, 5, 12, 233, 2, 
	2, 195, 2, 2, 2, 2, 5, 5, 
	5, 1, 0
]

class << self
	attr_accessor :_m_uri_trans_targs
	private :_m_uri_trans_targs, :_m_uri_trans_targs=
end
self._m_uri_trans_targs = [
	190, 0, 195, 6, 197, 207, 3, 192, 
	5, 194, 7, 9, 196, 11, 199, 12, 
	13, 201, 14, 16, 202, 18, 147, 185, 
	19, 22, 20, 21, 23, 134, 24, 27, 
	25, 26, 28, 121, 29, 32, 30, 31, 
	33, 108, 34, 37, 35, 36, 38, 95, 
	39, 42, 40, 41, 43, 82, 44, 47, 
	45, 46, 48, 76, 79, 80, 81, 49, 
	67, 70, 75, 50, 65, 63, 51, 52, 
	61, 59, 53, 54, 57, 55, 205, 56, 
	58, 60, 62, 64, 66, 68, 74, 69, 
	71, 72, 73, 77, 78, 83, 90, 93, 
	94, 84, 87, 89, 85, 88, 86, 91, 
	92, 96, 103, 106, 107, 97, 100, 102, 
	98, 101, 99, 104, 105, 109, 116, 119, 
	120, 110, 113, 115, 111, 114, 112, 117, 
	118, 122, 129, 132, 133, 123, 126, 128, 
	124, 127, 125, 130, 131, 135, 142, 145, 
	146, 136, 139, 141, 137, 140, 138, 143, 
	144, 148, 149, 150, 153, 151, 152, 154, 
	155, 158, 156, 157, 159, 160, 163, 161, 
	162, 164, 165, 168, 166, 167, 169, 170, 
	173, 171, 172, 174, 180, 183, 184, 175, 
	179, 176, 178, 177, 181, 182, 186, 187, 
	188, 8, 191, 193, 192, 2, 2, 194, 
	191, 4, 191, 4, 198, 199, 191, 10, 
	196, 200, 193, 201, 17, 191, 10, 196, 
	200, 193, 191, 196, 206, 193, 202, 15, 
	203, 15, 203, 204, 191, 196, 204, 193, 
	206, 189
]

class << self
	attr_accessor :_m_uri_trans_actions
	private :_m_uri_trans_actions, :_m_uri_trans_actions=
end
self._m_uri_trans_actions = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 5, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 19, 19, 0, 17, 
	33, 17, 9, 0, 0, 27, 21, 27, 
	21, 39, 21, 24, 13, 3, 0, 3, 
	3, 3, 30, 30, 15, 30, 13, 13, 
	21, 0, 3, 15, 7, 7, 0, 7, 
	0, 1
]

class << self
	attr_accessor :_m_uri_eof_actions
	private :_m_uri_eof_actions, :_m_uri_eof_actions=
end
self._m_uri_eof_actions = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 36, 
	11, 33, 9, 0, 0, 0, 21, 3, 
	30, 21, 3, 30, 7, 3, 7, 0
]

class << self
	attr_accessor :m_uri_start
end
self.m_uri_start = 1;
class << self
	attr_accessor :m_uri_first_final
end
self.m_uri_first_final = 190;
class << self
	attr_accessor :m_uri_error
end
self.m_uri_error = 0;

class << self
	attr_accessor :m_uri_en_main
end
self.m_uri_en_main = 1;


# line 28 "lib/uri_parser.rl"
    
# line 658 "lib/uri_parser.rb"
begin
	p ||= 0
	pe ||= data.length
	cs = m_uri_start
end

# line 29 "lib/uri_parser.rl"
    
# line 667 "lib/uri_parser.rb"
begin
	_klen, _trans, _keys, _acts, _nacts = nil
	_goto_level = 0
	_resume = 10
	_eof_trans = 15
	_again = 20
	_test_eof = 30
	_out = 40
	while true
	_trigger_goto = false
	if _goto_level <= 0
	if p == pe
		_goto_level = _test_eof
		next
	end
	if cs == 0
		_goto_level = _out
		next
	end
	end
	if _goto_level <= _resume
	_keys = _m_uri_key_offsets[cs]
	_trans = _m_uri_index_offsets[cs]
	_klen = _m_uri_single_lengths[cs]
	_break_match = false
	
	begin
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + _klen - 1

	     loop do
	        break if _upper < _lower
	        _mid = _lower + ( (_upper - _lower) >> 1 )

	        if data[p].ord < _m_uri_trans_keys[_mid]
	           _upper = _mid - 1
	        elsif data[p].ord > _m_uri_trans_keys[_mid]
	           _lower = _mid + 1
	        else
	           _trans += (_mid - _keys)
	           _break_match = true
	           break
	        end
	     end # loop
	     break if _break_match
	     _keys += _klen
	     _trans += _klen
	  end
	  _klen = _m_uri_range_lengths[cs]
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + (_klen << 1) - 2
	     loop do
	        break if _upper < _lower
	        _mid = _lower + (((_upper-_lower) >> 1) & ~1)
	        if data[p].ord < _m_uri_trans_keys[_mid]
	          _upper = _mid - 2
	        elsif data[p].ord > _m_uri_trans_keys[_mid+1]
	          _lower = _mid + 2
	        else
	          _trans += ((_mid - _keys) >> 1)
	          _break_match = true
	          break
	        end
	     end # loop
	     break if _break_match
	     _trans += _klen
	  end
	end while false
	_trans = _m_uri_indicies[_trans]
	cs = _m_uri_trans_targs[_trans]
	if _m_uri_trans_actions[_trans] != 0
		_acts = _m_uri_trans_actions[_trans]
		_nacts = _m_uri_actions[_acts]
		_acts += 1
		while _nacts > 0
			_nacts -= 1
			_acts += 1
			case _m_uri_actions[_acts - 1]
when 0 then
# line 18 "lib/../machines/uri.rl"
		begin

    @scheme = data[0..p-1]
  		end
when 1 then
# line 22 "lib/../machines/uri.rl"
		begin

    @host = data[start..p-1]
  		end
when 2 then
# line 26 "lib/../machines/uri.rl"
		begin

    @userinfo = data[start..p-1]
  		end
when 3 then
# line 30 "lib/../machines/uri.rl"
		begin

    @port = data[start..p-1].to_i
  		end
when 4 then
# line 34 "lib/../machines/uri.rl"
		begin

    @query = data[start..p-1]
  		end
when 6 then
# line 70 "lib/../machines/uri.rl"
		begin
start=p		end
when 7 then
# line 72 "lib/../machines/uri.rl"
		begin
start=p		end
when 8 then
# line 72 "lib/../machines/uri.rl"
		begin
start=p		end
when 9 then
# line 93 "lib/../machines/uri.rl"
		begin
start=p		end
when 10 then
# line 97 "lib/../machines/uri.rl"
		begin
start=p		end
# line 798 "lib/uri_parser.rb"
			end # action switch
		end
	end
	if _trigger_goto
		next
	end
	end
	if _goto_level <= _again
	if cs == 0
		_goto_level = _out
		next
	end
	p += 1
	if p != pe
		_goto_level = _resume
		next
	end
	end
	if _goto_level <= _test_eof
	if p == eof
	__acts = _m_uri_eof_actions[cs]
	__nacts =  _m_uri_actions[__acts]
	__acts += 1
	while __nacts > 0
		__nacts -= 1
		__acts += 1
		case _m_uri_actions[__acts - 1]
when 1 then
# line 22 "lib/../machines/uri.rl"
		begin

    @host = data[start..p-1]
  		end
when 3 then
# line 30 "lib/../machines/uri.rl"
		begin

    @port = data[start..p-1].to_i
  		end
when 4 then
# line 34 "lib/../machines/uri.rl"
		begin

    @query = data[start..p-1]
  		end
when 5 then
# line 38 "lib/../machines/uri.rl"
		begin

    @fragment = data[start..p-1]
  		end
when 6 then
# line 70 "lib/../machines/uri.rl"
		begin
start=p		end
when 8 then
# line 72 "lib/../machines/uri.rl"
		begin
start=p		end
when 9 then
# line 93 "lib/../machines/uri.rl"
		begin
start=p		end
when 10 then
# line 97 "lib/../machines/uri.rl"
		begin
start=p		end
# line 866 "lib/uri_parser.rb"
		end # eof action switch
	end
	if _trigger_goto
		next
	end
end
	end
	if _goto_level <= _out
		break
	end
	end
	end

# line 30 "lib/uri_parser.rl"
    #%
    if cs >= m_uri_first_final
      @is_valid = true
    else
      raise URIParserError
    end
  end

  def is_valid?
    @is_valid
  end

end

