
# line 1 "lib/uri_parser.rl"
#
# @LANG: ruby
# Parsing URI
# 

=begin

# line 12 "lib/uri_parser.rl"

=end

class MachineURI
  def initialize(data)
    @is_valid = false
    
# line 19 "lib/uri_parser.rb"
class << self
	attr_accessor :_m_uri_actions
	private :_m_uri_actions, :_m_uri_actions=
end
self._m_uri_actions = [
	0, 1, 0
]

class << self
	attr_accessor :_m_uri_key_offsets
	private :_m_uri_key_offsets, :_m_uri_key_offsets=
end
self._m_uri_key_offsets = [
	0, 0, 15, 21, 27, 33, 39, 45, 
	51, 57, 63, 77, 83, 89, 95, 101, 
	109, 116, 123, 130, 131, 138, 145, 152, 
	159, 160, 167, 174, 181, 188, 189, 196, 
	203, 210, 217, 218, 225, 232, 239, 246, 
	247, 254, 261, 268, 275, 276, 286, 294, 
	299, 302, 307, 310, 315, 318, 321, 322, 
	328, 331, 334, 335, 341, 344, 347, 348, 
	354, 357, 365, 373, 374, 381, 388, 395, 
	402, 409, 416, 427, 437, 445, 453, 460, 
	467, 477, 486, 495, 504, 506, 512, 520, 
	528, 540, 551, 560, 569, 577, 587, 596, 
	605, 614, 616, 625, 633, 641, 653, 664, 
	673, 682, 690, 700, 709, 718, 727, 729, 
	738, 746, 754, 766, 777, 786, 795, 803, 
	813, 822, 831, 840, 842, 851, 859, 867, 
	879, 890, 899, 908, 916, 926, 935, 944, 
	953, 955, 964, 972, 980, 992, 1003, 1012, 
	1021, 1029, 1030, 1036, 1044, 1052, 1060, 1062, 
	1068, 1075, 1082, 1089, 1090, 1096, 1103, 1110, 
	1117, 1118, 1124, 1131, 1138, 1145, 1146, 1152, 
	1159, 1166, 1173, 1174, 1183, 1191, 1199, 1207, 
	1208, 1215, 1222, 1233, 1243, 1251, 1259, 1266, 
	1272, 1279, 1292, 1306, 1319, 1321, 1332, 1344, 
	1359, 1372, 1389, 1405, 1424, 1440, 1455, 1460, 
	1464
]

class << self
	attr_accessor :_m_uri_trans_keys
	private :_m_uri_trans_keys, :_m_uri_trans_keys=
end
self._m_uri_trans_keys = [
	0, 33, 37, 47, 59, 61, 64, 95, 
	126, 36, 57, 65, 90, 97, 122, 48, 
	57, 65, 70, 97, 102, 48, 57, 65, 
	70, 97, 102, 48, 57, 65, 70, 97, 
	102, 48, 57, 65, 70, 97, 102, 48, 
	57, 65, 70, 97, 102, 48, 57, 65, 
	70, 97, 102, 48, 57, 65, 70, 97, 
	102, 48, 57, 65, 70, 97, 102, 33, 
	37, 61, 64, 95, 126, 36, 46, 48, 
	59, 65, 90, 97, 122, 48, 57, 65, 
	70, 97, 102, 48, 57, 65, 70, 97, 
	102, 48, 57, 65, 70, 97, 102, 48, 
	57, 65, 70, 97, 102, 58, 118, 48, 
	57, 65, 70, 97, 102, 58, 48, 57, 
	65, 70, 97, 102, 58, 48, 57, 65, 
	70, 97, 102, 58, 48, 57, 65, 70, 
	97, 102, 58, 58, 48, 57, 65, 70, 
	97, 102, 58, 48, 57, 65, 70, 97, 
	102, 58, 48, 57, 65, 70, 97, 102, 
	58, 48, 57, 65, 70, 97, 102, 58, 
	58, 48, 57, 65, 70, 97, 102, 58, 
	48, 57, 65, 70, 97, 102, 58, 48, 
	57, 65, 70, 97, 102, 58, 48, 57, 
	65, 70, 97, 102, 58, 58, 48, 57, 
	65, 70, 97, 102, 58, 48, 57, 65, 
	70, 97, 102, 58, 48, 57, 65, 70, 
	97, 102, 58, 48, 57, 65, 70, 97, 
	102, 58, 58, 48, 57, 65, 70, 97, 
	102, 58, 48, 57, 65, 70, 97, 102, 
	58, 48, 57, 65, 70, 97, 102, 58, 
	48, 57, 65, 70, 97, 102, 58, 58, 
	48, 57, 65, 70, 97, 102, 58, 48, 
	57, 65, 70, 97, 102, 58, 48, 57, 
	65, 70, 97, 102, 58, 48, 57, 65, 
	70, 97, 102, 58, 50, 58, 48, 49, 
	51, 57, 65, 70, 97, 102, 46, 58, 
	48, 57, 65, 70, 97, 102, 50, 48, 
	49, 51, 57, 46, 48, 57, 50, 48, 
	49, 51, 57, 46, 48, 57, 50, 48, 
	49, 51, 57, 93, 48, 57, 93, 48, 
	57, 93, 53, 93, 48, 52, 54, 57, 
	93, 48, 53, 46, 48, 57, 46, 46, 
	53, 48, 52, 54, 57, 46, 48, 53, 
	46, 48, 57, 46, 46, 53, 48, 52, 
	54, 57, 46, 48, 53, 46, 58, 48, 
	57, 65, 70, 97, 102, 46, 58, 48, 
	57, 65, 70, 97, 102, 58, 58, 48, 
	57, 65, 70, 97, 102, 93, 48, 57, 
	65, 70, 97, 102, 93, 48, 57, 65, 
	70, 97, 102, 93, 48, 57, 65, 70, 
	97, 102, 58, 48, 57, 65, 70, 97, 
	102, 58, 48, 57, 65, 70, 97, 102, 
	46, 53, 58, 48, 52, 54, 57, 65, 
	70, 97, 102, 46, 58, 48, 53, 54, 
	57, 65, 70, 97, 102, 46, 58, 48, 
	57, 65, 70, 97, 102, 46, 58, 48, 
	57, 65, 70, 97, 102, 93, 48, 57, 
	65, 70, 97, 102, 58, 48, 57, 65, 
	70, 97, 102, 50, 93, 48, 49, 51, 
	57, 65, 70, 97, 102, 46, 58, 93, 
	48, 57, 65, 70, 97, 102, 46, 58, 
	93, 48, 57, 65, 70, 97, 102, 46, 
	58, 93, 48, 57, 65, 70, 97, 102, 
	58, 93, 48, 57, 65, 70, 97, 102, 
	58, 93, 48, 57, 65, 70, 97, 102, 
	58, 93, 48, 57, 65, 70, 97, 102, 
	46, 53, 58, 93, 48, 52, 54, 57, 
	65, 70, 97, 102, 46, 58, 93, 48, 
	53, 54, 57, 65, 70, 97, 102, 46, 
	58, 93, 48, 57, 65, 70, 97, 102, 
	46, 58, 93, 48, 57, 65, 70, 97, 
	102, 58, 93, 48, 57, 65, 70, 97, 
	102, 50, 93, 48, 49, 51, 57, 65, 
	70, 97, 102, 46, 58, 93, 48, 57, 
	65, 70, 97, 102, 46, 58, 93, 48, 
	57, 65, 70, 97, 102, 46, 58, 93, 
	48, 57, 65, 70, 97, 102, 58, 93, 
	50, 48, 49, 51, 57, 65, 70, 97, 
	102, 58, 93, 48, 57, 65, 70, 97, 
	102, 58, 93, 48, 57, 65, 70, 97, 
	102, 46, 53, 58, 93, 48, 52, 54, 
	57, 65, 70, 97, 102, 46, 58, 93, 
	48, 53, 54, 57, 65, 70, 97, 102, 
	46, 58, 93, 48, 57, 65, 70, 97, 
	102, 46, 58, 93, 48, 57, 65, 70, 
	97, 102, 58, 93, 48, 57, 65, 70, 
	97, 102, 50, 93, 48, 49, 51, 57, 
	65, 70, 97, 102, 46, 58, 93, 48, 
	57, 65, 70, 97, 102, 46, 58, 93, 
	48, 57, 65, 70, 97, 102, 46, 58, 
	93, 48, 57, 65, 70, 97, 102, 58, 
	93, 50, 48, 49, 51, 57, 65, 70, 
	97, 102, 58, 93, 48, 57, 65, 70, 
	97, 102, 58, 93, 48, 57, 65, 70, 
	97, 102, 46, 53, 58, 93, 48, 52, 
	54, 57, 65, 70, 97, 102, 46, 58, 
	93, 48, 53, 54, 57, 65, 70, 97, 
	102, 46, 58, 93, 48, 57, 65, 70, 
	97, 102, 46, 58, 93, 48, 57, 65, 
	70, 97, 102, 58, 93, 48, 57, 65, 
	70, 97, 102, 50, 93, 48, 49, 51, 
	57, 65, 70, 97, 102, 46, 58, 93, 
	48, 57, 65, 70, 97, 102, 46, 58, 
	93, 48, 57, 65, 70, 97, 102, 46, 
	58, 93, 48, 57, 65, 70, 97, 102, 
	58, 93, 50, 48, 49, 51, 57, 65, 
	70, 97, 102, 58, 93, 48, 57, 65, 
	70, 97, 102, 58, 93, 48, 57, 65, 
	70, 97, 102, 46, 53, 58, 93, 48, 
	52, 54, 57, 65, 70, 97, 102, 46, 
	58, 93, 48, 53, 54, 57, 65, 70, 
	97, 102, 46, 58, 93, 48, 57, 65, 
	70, 97, 102, 46, 58, 93, 48, 57, 
	65, 70, 97, 102, 58, 93, 48, 57, 
	65, 70, 97, 102, 50, 93, 48, 49, 
	51, 57, 65, 70, 97, 102, 46, 58, 
	93, 48, 57, 65, 70, 97, 102, 46, 
	58, 93, 48, 57, 65, 70, 97, 102, 
	46, 58, 93, 48, 57, 65, 70, 97, 
	102, 58, 93, 50, 48, 49, 51, 57, 
	65, 70, 97, 102, 58, 93, 48, 57, 
	65, 70, 97, 102, 58, 93, 48, 57, 
	65, 70, 97, 102, 46, 53, 58, 93, 
	48, 52, 54, 57, 65, 70, 97, 102, 
	46, 58, 93, 48, 53, 54, 57, 65, 
	70, 97, 102, 46, 58, 93, 48, 57, 
	65, 70, 97, 102, 46, 58, 93, 48, 
	57, 65, 70, 97, 102, 58, 93, 48, 
	57, 65, 70, 97, 102, 58, 48, 57, 
	65, 70, 97, 102, 58, 93, 48, 57, 
	65, 70, 97, 102, 58, 93, 48, 57, 
	65, 70, 97, 102, 58, 93, 48, 57, 
	65, 70, 97, 102, 58, 93, 48, 57, 
	65, 70, 97, 102, 58, 48, 57, 65, 
	70, 97, 102, 58, 48, 57, 65, 70, 
	97, 102, 58, 48, 57, 65, 70, 97, 
	102, 58, 48, 57, 65, 70, 97, 102, 
	58, 48, 57, 65, 70, 97, 102, 58, 
	48, 57, 65, 70, 97, 102, 58, 48, 
	57, 65, 70, 97, 102, 58, 48, 57, 
	65, 70, 97, 102, 58, 48, 57, 65, 
	70, 97, 102, 58, 48, 57, 65, 70, 
	97, 102, 58, 48, 57, 65, 70, 97, 
	102, 58, 48, 57, 65, 70, 97, 102, 
	58, 48, 57, 65, 70, 97, 102, 58, 
	48, 57, 65, 70, 97, 102, 58, 48, 
	57, 65, 70, 97, 102, 58, 50, 48, 
	49, 51, 57, 65, 70, 97, 102, 46, 
	58, 48, 57, 65, 70, 97, 102, 46, 
	58, 48, 57, 65, 70, 97, 102, 46, 
	58, 48, 57, 65, 70, 97, 102, 58, 
	58, 48, 57, 65, 70, 97, 102, 58, 
	48, 57, 65, 70, 97, 102, 46, 53, 
	58, 48, 52, 54, 57, 65, 70, 97, 
	102, 46, 58, 48, 53, 54, 57, 65, 
	70, 97, 102, 46, 58, 48, 57, 65, 
	70, 97, 102, 46, 58, 48, 57, 65, 
	70, 97, 102, 58, 48, 57, 65, 70, 
	97, 102, 48, 57, 65, 70, 97, 102, 
	46, 48, 57, 65, 70, 97, 102, 33, 
	36, 61, 95, 126, 38, 46, 48, 59, 
	65, 90, 97, 122, 33, 36, 61, 93, 
	95, 126, 38, 46, 48, 59, 65, 90, 
	97, 122, 0, 33, 37, 47, 61, 95, 
	126, 36, 59, 64, 90, 97, 122, 35, 
	63, 33, 37, 61, 95, 126, 36, 59, 
	63, 90, 97, 122, 33, 35, 37, 61, 
	95, 126, 36, 59, 63, 90, 97, 122, 
	33, 35, 37, 47, 59, 61, 63, 95, 
	126, 36, 57, 64, 90, 97, 122, 33, 
	35, 37, 47, 61, 95, 126, 36, 59, 
	63, 90, 97, 122, 33, 35, 37, 47, 
	58, 61, 63, 64, 91, 95, 126, 36, 
	59, 65, 90, 97, 122, 33, 35, 37, 
	47, 58, 61, 63, 64, 95, 126, 36, 
	59, 65, 90, 97, 122, 33, 35, 37, 
	47, 61, 63, 64, 95, 126, 36, 46, 
	48, 57, 58, 59, 65, 90, 97, 122, 
	33, 35, 37, 47, 58, 61, 63, 91, 
	95, 126, 36, 59, 65, 90, 97, 122, 
	33, 35, 37, 47, 58, 61, 63, 95, 
	126, 36, 59, 65, 90, 97, 122, 35, 
	47, 63, 48, 57, 35, 47, 58, 63, 
	33, 35, 37, 43, 47, 58, 59, 61, 
	63, 64, 95, 126, 36, 44, 45, 57, 
	65, 90, 97, 122, 0
]

class << self
	attr_accessor :_m_uri_single_lengths
	private :_m_uri_single_lengths, :_m_uri_single_lengths=
end
self._m_uri_single_lengths = [
	0, 9, 0, 0, 0, 0, 0, 0, 
	0, 0, 6, 0, 0, 0, 0, 2, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 2, 2, 1, 
	1, 1, 1, 1, 1, 1, 1, 2, 
	1, 1, 1, 2, 1, 1, 1, 2, 
	1, 2, 2, 1, 1, 1, 1, 1, 
	1, 1, 3, 2, 2, 2, 1, 1, 
	2, 3, 3, 3, 2, 0, 2, 2, 
	4, 3, 3, 3, 2, 2, 3, 3, 
	3, 2, 1, 2, 2, 4, 3, 3, 
	3, 2, 2, 3, 3, 3, 2, 1, 
	2, 2, 4, 3, 3, 3, 2, 2, 
	3, 3, 3, 2, 1, 2, 2, 4, 
	3, 3, 3, 2, 2, 3, 3, 3, 
	2, 1, 2, 2, 4, 3, 3, 3, 
	2, 1, 0, 2, 2, 2, 2, 0, 
	1, 1, 1, 1, 0, 1, 1, 1, 
	1, 0, 1, 1, 1, 1, 0, 1, 
	1, 1, 1, 1, 2, 2, 2, 1, 
	1, 1, 3, 2, 2, 2, 1, 0, 
	1, 5, 6, 7, 2, 5, 6, 9, 
	7, 11, 10, 9, 10, 9, 3, 4, 
	12
]

class << self
	attr_accessor :_m_uri_range_lengths
	private :_m_uri_range_lengths, :_m_uri_range_lengths=
end
self._m_uri_range_lengths = [
	0, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 4, 3, 3, 3, 3, 3, 
	3, 3, 3, 0, 3, 3, 3, 3, 
	0, 3, 3, 3, 3, 0, 3, 3, 
	3, 3, 0, 3, 3, 3, 3, 0, 
	3, 3, 3, 3, 0, 4, 3, 2, 
	1, 2, 1, 2, 1, 1, 0, 2, 
	1, 1, 0, 2, 1, 1, 0, 2, 
	1, 3, 3, 0, 3, 3, 3, 3, 
	3, 3, 4, 4, 3, 3, 3, 3, 
	4, 3, 3, 3, 0, 3, 3, 3, 
	4, 4, 3, 3, 3, 4, 3, 3, 
	3, 0, 4, 3, 3, 4, 4, 3, 
	3, 3, 4, 3, 3, 3, 0, 4, 
	3, 3, 4, 4, 3, 3, 3, 4, 
	3, 3, 3, 0, 4, 3, 3, 4, 
	4, 3, 3, 3, 4, 3, 3, 3, 
	0, 4, 3, 3, 4, 4, 3, 3, 
	3, 0, 3, 3, 3, 3, 0, 3, 
	3, 3, 3, 0, 3, 3, 3, 3, 
	0, 3, 3, 3, 3, 0, 3, 3, 
	3, 3, 0, 4, 3, 3, 3, 0, 
	3, 3, 4, 4, 3, 3, 3, 3, 
	3, 4, 4, 3, 0, 3, 3, 3, 
	3, 3, 3, 5, 3, 3, 1, 0, 
	4
]

class << self
	attr_accessor :_m_uri_index_offsets
	private :_m_uri_index_offsets, :_m_uri_index_offsets=
end
self._m_uri_index_offsets = [
	0, 0, 13, 17, 21, 25, 29, 33, 
	37, 41, 45, 56, 60, 64, 68, 72, 
	78, 83, 88, 93, 95, 100, 105, 110, 
	115, 117, 122, 127, 132, 137, 139, 144, 
	149, 154, 159, 161, 166, 171, 176, 181, 
	183, 188, 193, 198, 203, 205, 212, 218, 
	222, 225, 229, 232, 236, 239, 242, 244, 
	249, 252, 255, 257, 262, 265, 268, 270, 
	275, 278, 284, 290, 292, 297, 302, 307, 
	312, 317, 322, 330, 337, 343, 349, 354, 
	359, 366, 373, 380, 387, 390, 394, 400, 
	406, 415, 423, 430, 437, 443, 450, 457, 
	464, 471, 474, 480, 486, 492, 501, 509, 
	516, 523, 529, 536, 543, 550, 557, 560, 
	566, 572, 578, 587, 595, 602, 609, 615, 
	622, 629, 636, 643, 646, 652, 658, 664, 
	673, 681, 688, 695, 701, 708, 715, 722, 
	729, 732, 738, 744, 750, 759, 767, 774, 
	781, 787, 789, 793, 799, 805, 811, 814, 
	818, 823, 828, 833, 835, 839, 844, 849, 
	854, 856, 860, 865, 870, 875, 877, 881, 
	886, 891, 896, 898, 904, 910, 916, 922, 
	924, 929, 934, 942, 949, 955, 961, 966, 
	970, 975, 985, 996, 1007, 1010, 1019, 1029, 
	1042, 1053, 1068, 1082, 1097, 1111, 1124, 1129, 
	1134
]

class << self
	attr_accessor :_m_uri_indicies
	private :_m_uri_indicies, :_m_uri_indicies=
end
self._m_uri_indicies = [
	0, 2, 3, 4, 2, 2, 2, 2, 
	2, 2, 5, 5, 1, 6, 6, 6, 
	1, 7, 7, 7, 1, 8, 8, 8, 
	1, 9, 9, 9, 1, 10, 10, 10, 
	1, 2, 2, 2, 1, 11, 11, 11, 
	1, 12, 12, 12, 1, 13, 14, 13, 
	15, 13, 13, 13, 13, 13, 13, 1, 
	16, 16, 16, 1, 13, 13, 13, 1, 
	17, 17, 17, 1, 18, 18, 18, 1, 
	20, 21, 19, 19, 19, 1, 23, 22, 
	22, 22, 1, 23, 24, 24, 24, 1, 
	23, 25, 25, 25, 1, 23, 1, 27, 
	26, 26, 26, 1, 29, 28, 28, 28, 
	1, 29, 30, 30, 30, 1, 29, 31, 
	31, 31, 1, 29, 1, 33, 32, 32, 
	32, 1, 35, 34, 34, 34, 1, 35, 
	36, 36, 36, 1, 35, 37, 37, 37, 
	1, 35, 1, 39, 38, 38, 38, 1, 
	41, 40, 40, 40, 1, 41, 42, 42, 
	42, 1, 41, 43, 43, 43, 1, 41, 
	1, 45, 44, 44, 44, 1, 47, 46, 
	46, 46, 1, 47, 48, 48, 48, 1, 
	47, 49, 49, 49, 1, 47, 1, 51, 
	50, 50, 50, 1, 53, 52, 52, 52, 
	1, 53, 54, 54, 54, 1, 53, 55, 
	55, 55, 1, 53, 1, 57, 59, 56, 
	58, 60, 60, 1, 61, 63, 62, 64, 
	64, 1, 66, 65, 67, 1, 68, 67, 
	1, 70, 69, 71, 1, 72, 71, 1, 
	74, 73, 75, 1, 76, 75, 1, 76, 
	77, 1, 76, 1, 78, 76, 75, 77, 
	1, 76, 77, 1, 72, 79, 1, 72, 
	1, 72, 80, 71, 79, 1, 72, 79, 
	1, 68, 81, 1, 68, 1, 68, 82, 
	67, 81, 1, 68, 81, 1, 61, 63, 
	83, 84, 84, 1, 61, 63, 85, 85, 
	85, 1, 63, 1, 77, 86, 86, 86, 
	1, 76, 87, 87, 87, 1, 76, 88, 
	88, 88, 1, 76, 77, 77, 77, 1, 
	63, 85, 85, 85, 1, 63, 84, 84, 
	84, 1, 61, 89, 63, 62, 90, 64, 
	64, 1, 61, 63, 83, 84, 84, 84, 
	1, 61, 63, 84, 84, 84, 1, 61, 
	63, 90, 64, 64, 1, 76, 86, 86, 
	86, 1, 63, 64, 64, 64, 1, 92, 
	76, 91, 93, 94, 94, 1, 61, 96, 
	76, 95, 97, 97, 1, 61, 96, 76, 
	98, 99, 99, 1, 61, 96, 76, 100, 
	100, 100, 1, 96, 76, 1, 86, 86, 
	86, 1, 96, 76, 100, 100, 100, 1, 
	96, 76, 99, 99, 99, 1, 61, 101, 
	96, 76, 95, 102, 97, 97, 1, 61, 
	96, 76, 98, 99, 99, 99, 1, 61, 
	96, 76, 99, 99, 99, 1, 61, 96, 
	76, 102, 97, 97, 1, 96, 76, 97, 
	97, 97, 1, 104, 76, 103, 105, 106, 
	106, 1, 61, 108, 76, 107, 109, 109, 
	1, 61, 108, 76, 110, 111, 111, 1, 
	61, 108, 76, 112, 112, 112, 1, 108, 
	76, 1, 92, 91, 93, 94, 94, 1, 
	108, 76, 112, 112, 112, 1, 108, 76, 
	111, 111, 111, 1, 61, 113, 108, 76, 
	107, 114, 109, 109, 1, 61, 108, 76, 
	110, 111, 111, 111, 1, 61, 108, 76, 
	111, 111, 111, 1, 61, 108, 76, 114, 
	109, 109, 1, 108, 76, 109, 109, 109, 
	1, 116, 76, 115, 117, 118, 118, 1, 
	61, 120, 76, 119, 121, 121, 1, 61, 
	120, 76, 122, 123, 123, 1, 61, 120, 
	76, 124, 124, 124, 1, 120, 76, 1, 
	104, 103, 105, 106, 106, 1, 120, 76, 
	124, 124, 124, 1, 120, 76, 123, 123, 
	123, 1, 61, 125, 120, 76, 119, 126, 
	121, 121, 1, 61, 120, 76, 122, 123, 
	123, 123, 1, 61, 120, 76, 123, 123, 
	123, 1, 61, 120, 76, 126, 121, 121, 
	1, 120, 76, 121, 121, 121, 1, 128, 
	76, 127, 129, 130, 130, 1, 61, 132, 
	76, 131, 133, 133, 1, 61, 132, 76, 
	134, 135, 135, 1, 61, 132, 76, 136, 
	136, 136, 1, 132, 76, 1, 116, 115, 
	117, 118, 118, 1, 132, 76, 136, 136, 
	136, 1, 132, 76, 135, 135, 135, 1, 
	61, 137, 132, 76, 131, 138, 133, 133, 
	1, 61, 132, 76, 134, 135, 135, 135, 
	1, 61, 132, 76, 135, 135, 135, 1, 
	61, 132, 76, 138, 133, 133, 1, 132, 
	76, 133, 133, 133, 1, 140, 76, 139, 
	141, 142, 142, 1, 61, 144, 76, 143, 
	145, 145, 1, 61, 144, 76, 146, 147, 
	147, 1, 61, 144, 76, 148, 148, 148, 
	1, 144, 76, 1, 128, 127, 129, 130, 
	130, 1, 144, 76, 148, 148, 148, 1, 
	144, 76, 147, 147, 147, 1, 61, 149, 
	144, 76, 143, 150, 145, 145, 1, 61, 
	144, 76, 146, 147, 147, 147, 1, 61, 
	144, 76, 147, 147, 147, 1, 61, 144, 
	76, 150, 145, 145, 1, 144, 76, 145, 
	145, 145, 1, 151, 1, 152, 152, 152, 
	1, 154, 76, 153, 153, 153, 1, 154, 
	76, 155, 155, 155, 1, 154, 76, 156, 
	156, 156, 1, 154, 76, 1, 157, 157, 
	157, 1, 159, 158, 158, 158, 1, 159, 
	160, 160, 160, 1, 159, 161, 161, 161, 
	1, 159, 1, 162, 162, 162, 1, 164, 
	163, 163, 163, 1, 164, 165, 165, 165, 
	1, 164, 166, 166, 166, 1, 164, 1, 
	167, 167, 167, 1, 169, 168, 168, 168, 
	1, 169, 170, 170, 170, 1, 169, 171, 
	171, 171, 1, 169, 1, 172, 172, 172, 
	1, 174, 173, 173, 173, 1, 174, 175, 
	175, 175, 1, 174, 176, 176, 176, 1, 
	174, 1, 178, 177, 179, 180, 180, 1, 
	61, 96, 181, 182, 182, 1, 61, 96, 
	183, 184, 184, 1, 61, 96, 185, 185, 
	185, 1, 96, 1, 96, 185, 185, 185, 
	1, 96, 184, 184, 184, 1, 61, 186, 
	96, 181, 187, 182, 182, 1, 61, 96, 
	183, 184, 184, 184, 1, 61, 96, 184, 
	184, 184, 1, 61, 96, 187, 182, 182, 
	1, 96, 182, 182, 182, 1, 188, 188, 
	188, 1, 189, 188, 188, 188, 1, 190, 
	190, 190, 190, 190, 190, 190, 190, 190, 
	1, 190, 190, 190, 76, 190, 190, 190, 
	190, 190, 190, 1, 0, 9, 191, 4, 
	9, 9, 9, 9, 9, 9, 1, 7, 
	9, 1, 7, 192, 7, 7, 7, 7, 
	7, 7, 1, 9, 7, 191, 9, 9, 
	9, 9, 9, 9, 1, 2, 7, 3, 
	9, 2, 2, 9, 2, 2, 2, 2, 
	2, 1, 9, 7, 191, 193, 9, 9, 
	9, 9, 9, 9, 1, 12, 7, 194, 
	9, 195, 12, 9, 15, 196, 12, 12, 
	12, 12, 12, 1, 12, 7, 194, 9, 
	195, 12, 9, 15, 12, 12, 12, 12, 
	12, 1, 13, 7, 14, 9, 13, 9, 
	15, 13, 13, 13, 195, 13, 13, 13, 
	1, 18, 7, 197, 9, 198, 18, 9, 
	196, 18, 18, 18, 18, 18, 1, 18, 
	7, 197, 9, 198, 18, 9, 18, 18, 
	18, 18, 18, 1, 7, 9, 9, 198, 
	1, 7, 9, 198, 9, 1, 2, 7, 
	3, 199, 9, 200, 2, 2, 9, 2, 
	2, 2, 2, 199, 199, 199, 1, 0
]

class << self
	attr_accessor :_m_uri_trans_targs
	private :_m_uri_trans_targs, :_m_uri_trans_targs=
end
self._m_uri_trans_targs = [
	188, 0, 191, 6, 192, 200, 3, 189, 
	5, 190, 7, 9, 194, 10, 11, 196, 
	12, 14, 197, 16, 145, 183, 17, 20, 
	18, 19, 21, 132, 22, 25, 23, 24, 
	26, 119, 27, 30, 28, 29, 31, 106, 
	32, 35, 33, 34, 36, 93, 37, 40, 
	38, 39, 41, 80, 42, 45, 43, 44, 
	46, 74, 77, 78, 79, 47, 65, 68, 
	73, 48, 63, 61, 49, 50, 59, 57, 
	51, 52, 55, 53, 199, 54, 56, 58, 
	60, 62, 64, 66, 72, 67, 69, 70, 
	71, 75, 76, 81, 88, 91, 92, 82, 
	85, 87, 83, 86, 84, 89, 90, 94, 
	101, 104, 105, 95, 98, 100, 96, 99, 
	97, 102, 103, 107, 114, 117, 118, 108, 
	111, 113, 109, 112, 110, 115, 116, 120, 
	127, 130, 131, 121, 124, 126, 122, 125, 
	123, 128, 129, 133, 140, 143, 144, 134, 
	137, 139, 135, 138, 136, 141, 142, 146, 
	147, 148, 151, 149, 150, 152, 153, 156, 
	154, 155, 157, 158, 161, 159, 160, 162, 
	163, 166, 164, 165, 167, 168, 171, 169, 
	170, 172, 178, 181, 182, 173, 177, 174, 
	176, 175, 179, 180, 184, 185, 186, 4, 
	2, 193, 8, 195, 15, 13, 198, 200, 
	187
]

class << self
	attr_accessor :_m_uri_trans_actions
	private :_m_uri_trans_actions, :_m_uri_trans_actions=
end
self._m_uri_trans_actions = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 1, 
	0
]

class << self
	attr_accessor :m_uri_start
end
self.m_uri_start = 1;
class << self
	attr_accessor :m_uri_first_final
end
self.m_uri_first_final = 188;
class << self
	attr_accessor :m_uri_error
end
self.m_uri_error = 0;

class << self
	attr_accessor :m_uri_en_main
end
self.m_uri_en_main = 1;


# line 19 "lib/uri_parser.rl"
    
# line 591 "lib/uri_parser.rb"
begin
	p ||= 0
	pe ||= data.length
	cs = m_uri_start
end

# line 20 "lib/uri_parser.rl"
    
# line 600 "lib/uri_parser.rb"
begin
	_klen, _trans, _keys, _acts, _nacts = nil
	_goto_level = 0
	_resume = 10
	_eof_trans = 15
	_again = 20
	_test_eof = 30
	_out = 40
	while true
	_trigger_goto = false
	if _goto_level <= 0
	if p == pe
		_goto_level = _test_eof
		next
	end
	if cs == 0
		_goto_level = _out
		next
	end
	end
	if _goto_level <= _resume
	_keys = _m_uri_key_offsets[cs]
	_trans = _m_uri_index_offsets[cs]
	_klen = _m_uri_single_lengths[cs]
	_break_match = false
	
	begin
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + _klen - 1

	     loop do
	        break if _upper < _lower
	        _mid = _lower + ( (_upper - _lower) >> 1 )

	        if data[p].ord < _m_uri_trans_keys[_mid]
	           _upper = _mid - 1
	        elsif data[p].ord > _m_uri_trans_keys[_mid]
	           _lower = _mid + 1
	        else
	           _trans += (_mid - _keys)
	           _break_match = true
	           break
	        end
	     end # loop
	     break if _break_match
	     _keys += _klen
	     _trans += _klen
	  end
	  _klen = _m_uri_range_lengths[cs]
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + (_klen << 1) - 2
	     loop do
	        break if _upper < _lower
	        _mid = _lower + (((_upper-_lower) >> 1) & ~1)
	        if data[p].ord < _m_uri_trans_keys[_mid]
	          _upper = _mid - 2
	        elsif data[p].ord > _m_uri_trans_keys[_mid+1]
	          _lower = _mid + 2
	        else
	          _trans += ((_mid - _keys) >> 1)
	          _break_match = true
	          break
	        end
	     end # loop
	     break if _break_match
	     _trans += _klen
	  end
	end while false
	_trans = _m_uri_indicies[_trans]
	cs = _m_uri_trans_targs[_trans]
	if _m_uri_trans_actions[_trans] != 0
		_acts = _m_uri_trans_actions[_trans]
		_nacts = _m_uri_actions[_acts]
		_acts += 1
		while _nacts > 0
			_nacts -= 1
			_acts += 1
			case _m_uri_actions[_acts - 1]
when 0 then
# line 15 "lib/../machines/uri.rl"
		begin

  		end
# line 686 "lib/uri_parser.rb"
			end # action switch
		end
	end
	if _trigger_goto
		next
	end
	end
	if _goto_level <= _again
	if cs == 0
		_goto_level = _out
		next
	end
	p += 1
	if p != pe
		_goto_level = _resume
		next
	end
	end
	if _goto_level <= _test_eof
	end
	if _goto_level <= _out
		break
	end
	end
	end

# line 21 "lib/uri_parser.rl"
    #%
    if cs >= m_uri_first_final
      @is_valid = true
    end
  end

  def is_valid?
    @is_valid
  end
end

